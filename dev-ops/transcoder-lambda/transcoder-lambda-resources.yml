AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates a s3 bucket
Parameters:
  zipFileLocation:
    Type: String
    Description: S3 Object Key of lambda code.
    Default: transcoder/transcode-video.zip 
  MemorySize:
    Type: Number
    Description: Memory Size
    Default: '256'
  Timeout:
    Type: Number
    Description: Time out
    Default: '60'
  GroupId:
    Description: Business Unit
    Type: String
    Default: research
  ApplicationId:
    Description: Application Id
    Type: String
    Default: aws
  Environment:
    Description: Environment
    Type: String
    Default: dit  
  AppName:
    Type: String
    Description: AppName.
    Default: transcoder
  DeployBucket:
    Type: String
    Description: DeployBucket.
    Default: aksh-test-deploy
  LandingBucketName:
    Type: String
    Description: DeployBucket.
    Default: aksh-test-deploy
  HandlerClass:
    Type: String
    Description: HandlerClass.
    Default: index.handler
  RoleArn:
    Type: String
    Description: Role Arn
  Alias:
    Description: Alias
    Type: String
    Default: current
Resources:
  S3LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub '${DeployBucket}'
        S3Key: !Sub '${zipFileLocation}'
      FunctionName: !Sub '${GroupId}-${ApplicationId}-${Environment}-${AppName}'
      MemorySize: !Ref 'MemorySize'
      Handler: !Ref 'HandlerClass'
      Role: !Ref RoleArn
      Runtime: "nodejs8.10"
      Timeout: !Ref 'Timeout'
      Environment: 
        Variables:
          ELASTIC_TRANSCODER_PIPELINE_ID: 1553076944645-a97sog
          ELASTIC_TRANSCODER_REGION: us-east-1
  S3LambdaFunctionVersion: 
    Type: AWS::Lambda::Version
    Properties: 
      FunctionName: 
        Ref: "S3LambdaFunction"
      Description: "A version"
  S3LambdaFunctionAlias: 
    Type: AWS::Lambda::Alias
    Properties: 
      FunctionName: 
        Ref: "S3LambdaFunction"
      FunctionVersion: 
        Fn::GetAtt: 
          - "S3LambdaFunctionVersion"
          - "Version"
      Name:
        Ref: "Alias"

  S3MetadataUpdaterBucketPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref 'S3LambdaFunction'
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub "arn:aws:s3:::${GroupId}-${ApplicationId}-${Environment}-${LandingBucketName}"
  BucketConfiguration:
    Type: Custom::S3BucketConfiguration
    Properties:
      ServiceToken: !ImportValue S3BucketConfigurationLambdaArn
      Bucket: !Sub "${GroupId}-${ApplicationId}-${Environment}-${LandingBucketName}"
      NotificationConfiguration:
        LambdaFunctionConfigurations:
        - Events: ['s3:ObjectCreated:*']
          LambdaFunctionArn: !GetAtt S3LambdaFunction.Arn